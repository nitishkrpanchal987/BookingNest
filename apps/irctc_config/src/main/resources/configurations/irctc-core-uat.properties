# debug=true

# Common properties
server.port= ${IRCTC_CORE_SERVICE_HOST:9000}

# Postgres config
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${POSTGRES_1_DB_HOST:localhost}:${POSTGRES_1_DB_PORT:5432}/${POSTGRES_1_DB_NAME:postgres}
spring.datasource.username=${POSTGRES_1_DB_USERNAME:admin}
spring.datasource.password=${POSTGRES_1_DB_PASSWORD:password}
spring.jpa.hibernate.ddl-auto=update

# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.show_sql=true

spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10

# Servlet
# server.servlet.contextPath=/api/v1

# Redis config
spring.cache.type=redis
spring.data.redis.host=${REDIS_1_HOST:localhost}
spring.data.redis.port=${REDIS_1_PORT:6379}
spring.cache.cache-names=trainModule
spring.cache.redis.time-to-live=1m

# Actuator
management.endpoints.web.exposure.include=*
management.endpoint.configprops.show-values=ALWAYS
management.endpoint.metrics.access=read-only
management.endpoint.health.show-details=always
management.endpoint.beans.access=read-only

# Logging
logging.level.root=INFO

# External API
external.api.posts.url=https://jsonplaceholder.typicode.com


#####
eureka.instance.hostname=${DISCOVERY_SERVICE_HOST:localhost}
eureka.client.service-url.defaultZone=http://${DISCOVERY_SERVICE_HOST:localhost}:${DISCOVERY_SERVICE_PORT:8761}/eureka/


# Kafka
spring.kafka.producer.bootstrap-servers=http://${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=trainSeatBookingConfirmation:com.harshchauhan.irctc_core.modules.trainSeatModule.dtos.TrainSeatBookingConfirmationDto